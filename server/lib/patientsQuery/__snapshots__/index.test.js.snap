// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`#patientQueryBuilder DEBUG MODE it console log the final query object 1`] = `
Object {
  "attributes": Array [
    "id",
    "accountId",
    "pmsId",
    "patientUserId",
    "email",
    "firstName",
    "lastName",
    "middleName",
    "cellPhoneNumber",
    "phoneNumber",
    "homePhoneNumber",
    "mobilePhoneNumber",
    "workPhoneNumber",
    "otherPhoneNumber",
    "prefContactPhone",
    "gender",
    "prefName",
    "language",
    "address",
    "preferences",
    "type",
    "contactMethodNote",
    "birthDate",
    "pmsCreatedAt",
    "insurance",
    "isDeleted",
    "isSyncedWithPms",
    "familyId",
    "status",
    "lastApptId",
    "lastApptDate",
    "lastHygieneDate",
    "lastHygieneApptId",
    "lastRecallDate",
    "lastRecallApptId",
    "dueForRecallExamDate",
    "recallPendingAppointmentId",
    "dueForHygieneDate",
    "hygienePendingAppointmentId",
    "lastRestorativeDate",
    "lastRestorativeApptId",
    "firstApptId",
    "firstApptDate",
    "nextApptId",
    "nextApptDate",
    "insuranceInterval",
    "contCareInterval",
    "avatarUrl",
    "omitReminderIds",
    "omitRecallIds",
    "createdAt",
    "updatedAt",
    "deletedAt",
  ],
  "include": Array [],
  "limit": 15,
  "offset": 0,
  "order": Array [
    "firstName",
    "lastName",
  ],
  "where": Object {
    "accountId": "62954241-3652-4792-bae5-5bfed53d37b7",
    "status": "Active",
  },
}
`;

exports[`#patientQueryBuilder DEBUG MODE it console log the queries made 1`] = `"Executing (default): SELECT count(\\"Patient\\".\\"id\\") AS \\"count\\" FROM \\"Patients\\" AS \\"Patient\\" WHERE ( AND (\\"Patient\\".\\"accountId\\" = '62954241-3652-4792-bae5-5bfed53d37b7' AND \\"Patient\\".\\"status\\" = 'Active'));"`;

exports[`#patientQueryBuilder DEBUG MODE it console log the queries made 2`] = `"Executing (default): SELECT \\"id\\", \\"accountId\\", \\"pmsId\\", \\"patientUserId\\", \\"email\\", \\"firstName\\", \\"lastName\\", \\"middleName\\", \\"cellPhoneNumber\\", \\"phoneNumber\\", \\"homePhoneNumber\\", \\"mobilePhoneNumber\\", \\"workPhoneNumber\\", \\"otherPhoneNumber\\", \\"prefContactPhone\\", \\"gender\\", \\"prefName\\", \\"language\\", \\"address\\", \\"preferences\\", \\"type\\", \\"contactMethodNote\\", \\"birthDate\\", \\"pmsCreatedAt\\", \\"insurance\\", \\"isDeleted\\", \\"isSyncedWithPms\\", \\"familyId\\", \\"status\\", \\"lastApptId\\", \\"lastApptDate\\", \\"lastHygieneDate\\", \\"lastHygieneApptId\\", \\"lastRecallDate\\", \\"lastRecallApptId\\", \\"dueForRecallExamDate\\", \\"recallPendingAppointmentId\\", \\"dueForHygieneDate\\", \\"hygienePendingAppointmentId\\", \\"lastRestorativeDate\\", \\"lastRestorativeApptId\\", \\"firstApptId\\", \\"firstApptDate\\", \\"nextApptId\\", \\"nextApptDate\\", \\"insuranceInterval\\", \\"contCareInterval\\", \\"avatarUrl\\", \\"omitReminderIds\\", \\"omitRecallIds\\", \\"createdAt\\", \\"updatedAt\\", \\"deletedAt\\" FROM \\"Patients\\" AS \\"Patient\\" WHERE ( AND (\\"Patient\\".\\"accountId\\" = '62954241-3652-4792-bae5-5bfed53d37b7' AND \\"Patient\\".\\"status\\" = 'Active')) ORDER BY \\"Patient\\".\\"firstName\\", \\"Patient\\".\\"lastName\\" LIMIT 15 OFFSET 0;"`;

exports[`#patientQueryBuilder Usage it overrides the default parameters 1`] = `
Object {
  "include": Array [],
  "limit": 30,
  "offset": 60,
  "order": Array [
    "middleName",
  ],
  "where": Object {
    "accountId": "62954241-3652-4792-bae5-5bfed53d37b7",
    "status": "Active",
  },
}
`;

exports[`#patientQueryBuilder Usage it works with just accountId and default parameters 1`] = `
Object {
  "include": Array [],
  "limit": 15,
  "offset": 0,
  "order": Array [
    "firstName",
    "lastName",
  ],
  "where": Object {
    "accountId": "62954241-3652-4792-bae5-5bfed53d37b7",
    "status": "Active",
  },
}
`;

exports[`#patientQueryBuilder Usage it works with segment + regular filters 1`] = `
Object {
  "group": Array [
    "Patient.id",
    "Patient.id",
  ],
  "having": Array [
    Object {},
    Where {
      "attribute": Fn {
        "args": Array [
          Col {
            "col": "sentRecalls.createdAt",
          },
        ],
        "fn": "max",
      },
      "comparator": "=",
      "logic": Object {
        "$between": Array [
          "2018-11-10",
          "2018-12-10",
        ],
      },
    },
  ],
  "include": Array [
    Object {
      "as": "appointments",
      "attributes": Array [],
      "duplicating": false,
      "model": [Function],
      "required": true,
      "where": Object {
        "chairId": Object {
          "$not": null,
        },
        "isCancelled": false,
        "isDeleted": false,
        "isMissed": false,
        "isPending": false,
        "practitionerId": "f334b97f-21ec-42ad-828e-599bf4c99b1d",
      },
    },
    Object {
      "as": "sentRecalls",
      "attributes": Array [],
      "duplicating": false,
      "model": [Function],
      "required": true,
      "where": Object {
        "isSent": true,
      },
    },
  ],
  "limit": 15,
  "offset": 0,
  "order": Array [
    "firstName",
    "lastName",
  ],
  "where": Object {
    "$or": Object {
      "dueForHygieneDate": Object {
        "$gte": "2017-11-16T08:00:00.000Z",
        "$lt": "2017-12-16T08:00:00.000Z",
        "$not": null,
      },
      "dueForRecallExamDate": Object {
        "$gte": "2017-11-16T08:00:00.000Z",
        "$lt": "2017-12-16T08:00:00.000Z",
        "$not": null,
      },
    },
    "accountId": "62954241-3652-4792-bae5-5bfed53d37b7",
    "address": Object {
      "city": Object {
        "$iLike": "%Calgary%",
      },
    },
    "birthDate": Object {
      "$between": Array [
        "2015-11-16T08:00:00.000Z",
        "2016-11-16T08:00:00.000Z",
      ],
    },
    "firstName": Object {
      "$iLike": "Aiden%",
    },
    "gender": Object {
      "$iLike": "Female%",
    },
    "lastName": Object {
      "$iLike": "Considine%",
    },
    "status": "Active",
  },
}
`;

exports[`#patientQueryBuilder Usage it works with segment 1`] = `
Object {
  "include": Array [],
  "limit": 15,
  "offset": 0,
  "order": Array [
    "firstName",
    "lastName",
  ],
  "where": Object {
    "$or": Object {
      "dueForHygieneDate": Object {
        "$gte": "2017-11-16T08:00:00.000Z",
        "$lt": "2017-12-16T08:00:00.000Z",
        "$not": null,
      },
      "dueForRecallExamDate": Object {
        "$gte": "2017-11-16T08:00:00.000Z",
        "$lt": "2017-12-16T08:00:00.000Z",
        "$not": null,
      },
    },
    "accountId": "62954241-3652-4792-bae5-5bfed53d37b7",
    "status": "Active",
  },
}
`;

exports[`#patientQueryBuilder Usage it works with sentRecalls not sent automated 1`] = `
Object {
  "group": Array [
    "Patient.id",
  ],
  "having": Array [
    Object {},
    Where {
      "attribute": Literal {
        "val": "count(CASE WHEN \\"sentRecalls\\".\\"isSent\\" = true then 1 else NULL END)",
      },
      "comparator": "=",
      "logic": Object {
        "$eq": 0,
      },
    },
  ],
  "include": Array [
    Object {
      "as": "sentRecalls",
      "attributes": Array [],
      "duplicating": false,
      "model": [Function],
      "required": false,
      "where": Object {
        "createdAt": Object {
          "$between": Array [
            "2018-11-10",
            "2018-12-10",
          ],
        },
        "isAutomated": true,
      },
    },
  ],
  "limit": 15,
  "logging": [MockFunction] {
    "calls": Array [
      Array [
        Object {
          "attributes": Array [
            "id",
            "accountId",
            "pmsId",
            "patientUserId",
            "email",
            "firstName",
            "lastName",
            "middleName",
            "cellPhoneNumber",
            "phoneNumber",
            "homePhoneNumber",
            "mobilePhoneNumber",
            "workPhoneNumber",
            "otherPhoneNumber",
            "prefContactPhone",
            "gender",
            "prefName",
            "language",
            "address",
            "preferences",
            "type",
            "contactMethodNote",
            "birthDate",
            "pmsCreatedAt",
            "insurance",
            "isDeleted",
            "isSyncedWithPms",
            "familyId",
            "status",
            "lastApptId",
            "lastApptDate",
            "lastHygieneDate",
            "lastHygieneApptId",
            "lastRecallDate",
            "lastRecallApptId",
            "dueForRecallExamDate",
            "recallPendingAppointmentId",
            "dueForHygieneDate",
            "hygienePendingAppointmentId",
            "lastRestorativeDate",
            "lastRestorativeApptId",
            "firstApptId",
            "firstApptDate",
            "nextApptId",
            "nextApptDate",
            "insuranceInterval",
            "contCareInterval",
            "avatarUrl",
            "omitReminderIds",
            "omitRecallIds",
            "createdAt",
            "updatedAt",
            "deletedAt",
          ],
          "group": Array [
            "Patient.id",
          ],
          "having": Array [
            Object {},
            Where {
              "attribute": Literal {
                "val": "count(CASE WHEN \\"sentRecalls\\".\\"isSent\\" = true then 1 else NULL END)",
              },
              "comparator": "=",
              "logic": Object {
                "$eq": 0,
              },
            },
          ],
          "include": Array [
            Object {
              "as": "sentRecalls",
              "attributes": Array [],
              "duplicating": false,
              "model": [Function],
              "required": false,
              "where": Object {
                "createdAt": Object {
                  "$between": Array [
                    "2018-11-10",
                    "2018-12-10",
                  ],
                },
                "isAutomated": true,
              },
            },
          ],
          "limit": 15,
          "logging": [MockFunction] {
            "calls": [Circular],
          },
          "offset": 0,
          "order": Array [
            "firstName",
            "lastName",
          ],
          "where": Object {
            "accountId": "62954241-3652-4792-bae5-5bfed53d37b7",
            "status": "Active",
          },
        },
      ],
      Array [
        "Executing (default): SELECT count(\\"Patient\\".\\"id\\") AS \\"count\\" FROM \\"Patients\\" AS \\"Patient\\" LEFT OUTER JOIN \\"SentRecalls\\" AS \\"sentRecalls\\" ON \\"Patient\\".\\"id\\" = \\"sentRecalls\\".\\"patientId\\" AND ((\\"sentRecalls\\".\\"deletedAt\\" > '2017-11-16 08:00:00.000 +00:00' OR \\"sentRecalls\\".\\"deletedAt\\" IS NULL) AND (\\"sentRecalls\\".\\"createdAt\\" BETWEEN '2018-11-10' AND '2018-12-10' AND \\"sentRecalls\\".\\"isAutomated\\" = true)) WHERE ((\\"Patient\\".\\"deletedAt\\" > '2017-11-16 08:00:00.000 +00:00' OR \\"Patient\\".\\"deletedAt\\" IS NULL) AND (\\"Patient\\".\\"accountId\\" = '62954241-3652-4792-bae5-5bfed53d37b7' AND \\"Patient\\".\\"status\\" = 'Active')) GROUP BY \\"Patient\\".\\"id\\" HAVING (count(CASE WHEN \\"sentRecalls\\".\\"isSent\\" = true then 1 else NULL END) = 0);",
      ],
      Array [
        "Executing (default): SELECT \\"Patient\\".\\"id\\", \\"Patient\\".\\"accountId\\", \\"Patient\\".\\"pmsId\\", \\"Patient\\".\\"patientUserId\\", \\"Patient\\".\\"email\\", \\"Patient\\".\\"firstName\\", \\"Patient\\".\\"lastName\\", \\"Patient\\".\\"middleName\\", \\"Patient\\".\\"cellPhoneNumber\\", \\"Patient\\".\\"phoneNumber\\", \\"Patient\\".\\"homePhoneNumber\\", \\"Patient\\".\\"mobilePhoneNumber\\", \\"Patient\\".\\"workPhoneNumber\\", \\"Patient\\".\\"otherPhoneNumber\\", \\"Patient\\".\\"prefContactPhone\\", \\"Patient\\".\\"gender\\", \\"Patient\\".\\"prefName\\", \\"Patient\\".\\"language\\", \\"Patient\\".\\"address\\", \\"Patient\\".\\"preferences\\", \\"Patient\\".\\"type\\", \\"Patient\\".\\"contactMethodNote\\", \\"Patient\\".\\"birthDate\\", \\"Patient\\".\\"pmsCreatedAt\\", \\"Patient\\".\\"insurance\\", \\"Patient\\".\\"isDeleted\\", \\"Patient\\".\\"isSyncedWithPms\\", \\"Patient\\".\\"familyId\\", \\"Patient\\".\\"status\\", \\"Patient\\".\\"lastApptId\\", \\"Patient\\".\\"lastApptDate\\", \\"Patient\\".\\"lastHygieneDate\\", \\"Patient\\".\\"lastHygieneApptId\\", \\"Patient\\".\\"lastRecallDate\\", \\"Patient\\".\\"lastRecallApptId\\", \\"Patient\\".\\"dueForRecallExamDate\\", \\"Patient\\".\\"recallPendingAppointmentId\\", \\"Patient\\".\\"dueForHygieneDate\\", \\"Patient\\".\\"hygienePendingAppointmentId\\", \\"Patient\\".\\"lastRestorativeDate\\", \\"Patient\\".\\"lastRestorativeApptId\\", \\"Patient\\".\\"firstApptId\\", \\"Patient\\".\\"firstApptDate\\", \\"Patient\\".\\"nextApptId\\", \\"Patient\\".\\"nextApptDate\\", \\"Patient\\".\\"insuranceInterval\\", \\"Patient\\".\\"contCareInterval\\", \\"Patient\\".\\"avatarUrl\\", \\"Patient\\".\\"omitReminderIds\\", \\"Patient\\".\\"omitRecallIds\\", \\"Patient\\".\\"createdAt\\", \\"Patient\\".\\"updatedAt\\", \\"Patient\\".\\"deletedAt\\" FROM \\"Patients\\" AS \\"Patient\\" LEFT OUTER JOIN \\"SentRecalls\\" AS \\"sentRecalls\\" ON \\"Patient\\".\\"id\\" = \\"sentRecalls\\".\\"patientId\\" AND ((\\"sentRecalls\\".\\"deletedAt\\" > '2017-11-16 08:00:00.000 +00:00' OR \\"sentRecalls\\".\\"deletedAt\\" IS NULL) AND (\\"sentRecalls\\".\\"createdAt\\" BETWEEN '2018-11-10' AND '2018-12-10' AND \\"sentRecalls\\".\\"isAutomated\\" = true)) WHERE ((\\"Patient\\".\\"deletedAt\\" > '2017-11-16 08:00:00.000 +00:00' OR \\"Patient\\".\\"deletedAt\\" IS NULL) AND (\\"Patient\\".\\"accountId\\" = '62954241-3652-4792-bae5-5bfed53d37b7' AND \\"Patient\\".\\"status\\" = 'Active')) GROUP BY \\"Patient\\".\\"id\\" HAVING (count(CASE WHEN \\"sentRecalls\\".\\"isSent\\" = true then 1 else NULL END) = 0) ORDER BY \\"Patient\\".\\"firstName\\", \\"Patient\\".\\"lastName\\" LIMIT 15 OFFSET 0;",
      ],
    ],
  },
  "offset": 0,
  "order": Array [
    "firstName",
    "lastName",
  ],
  "where": Object {
    "accountId": "62954241-3652-4792-bae5-5bfed53d37b7",
    "status": "Active",
  },
}
`;

exports[`#patientQueryBuilder Usage it works with sentRecalls not sent manual 1`] = `
Object {
  "group": Array [
    "Patient.id",
  ],
  "having": Array [
    Object {},
    Where {
      "attribute": Literal {
        "val": "count(CASE WHEN \\"sentRecalls\\".\\"isSent\\" = true then 1 else NULL END)",
      },
      "comparator": "=",
      "logic": Object {
        "$eq": 0,
      },
    },
  ],
  "include": Array [
    Object {
      "as": "sentRecalls",
      "attributes": Array [],
      "duplicating": false,
      "model": [Function],
      "required": false,
      "where": Object {
        "createdAt": Object {
          "$between": Array [
            "2018-11-10",
            "2018-12-10",
          ],
        },
        "isAutomated": false,
      },
    },
  ],
  "limit": 15,
  "logging": [MockFunction] {
    "calls": Array [
      Array [
        Object {
          "attributes": Array [
            "id",
            "accountId",
            "pmsId",
            "patientUserId",
            "email",
            "firstName",
            "lastName",
            "middleName",
            "cellPhoneNumber",
            "phoneNumber",
            "homePhoneNumber",
            "mobilePhoneNumber",
            "workPhoneNumber",
            "otherPhoneNumber",
            "prefContactPhone",
            "gender",
            "prefName",
            "language",
            "address",
            "preferences",
            "type",
            "contactMethodNote",
            "birthDate",
            "pmsCreatedAt",
            "insurance",
            "isDeleted",
            "isSyncedWithPms",
            "familyId",
            "status",
            "lastApptId",
            "lastApptDate",
            "lastHygieneDate",
            "lastHygieneApptId",
            "lastRecallDate",
            "lastRecallApptId",
            "dueForRecallExamDate",
            "recallPendingAppointmentId",
            "dueForHygieneDate",
            "hygienePendingAppointmentId",
            "lastRestorativeDate",
            "lastRestorativeApptId",
            "firstApptId",
            "firstApptDate",
            "nextApptId",
            "nextApptDate",
            "insuranceInterval",
            "contCareInterval",
            "avatarUrl",
            "omitReminderIds",
            "omitRecallIds",
            "createdAt",
            "updatedAt",
            "deletedAt",
          ],
          "group": Array [
            "Patient.id",
          ],
          "having": Array [
            Object {},
            Where {
              "attribute": Literal {
                "val": "count(CASE WHEN \\"sentRecalls\\".\\"isSent\\" = true then 1 else NULL END)",
              },
              "comparator": "=",
              "logic": Object {
                "$eq": 0,
              },
            },
          ],
          "include": Array [
            Object {
              "as": "sentRecalls",
              "attributes": Array [],
              "duplicating": false,
              "model": [Function],
              "required": false,
              "where": Object {
                "createdAt": Object {
                  "$between": Array [
                    "2018-11-10",
                    "2018-12-10",
                  ],
                },
                "isAutomated": false,
              },
            },
          ],
          "limit": 15,
          "logging": [MockFunction] {
            "calls": [Circular],
          },
          "offset": 0,
          "order": Array [
            "firstName",
            "lastName",
          ],
          "where": Object {
            "accountId": "62954241-3652-4792-bae5-5bfed53d37b7",
            "status": "Active",
          },
        },
      ],
      Array [
        "Executing (default): SELECT count(\\"Patient\\".\\"id\\") AS \\"count\\" FROM \\"Patients\\" AS \\"Patient\\" LEFT OUTER JOIN \\"SentRecalls\\" AS \\"sentRecalls\\" ON \\"Patient\\".\\"id\\" = \\"sentRecalls\\".\\"patientId\\" AND ((\\"sentRecalls\\".\\"deletedAt\\" > '2017-11-16 08:00:00.000 +00:00' OR \\"sentRecalls\\".\\"deletedAt\\" IS NULL) AND (\\"sentRecalls\\".\\"createdAt\\" BETWEEN '2018-11-10' AND '2018-12-10' AND \\"sentRecalls\\".\\"isAutomated\\" = false)) WHERE ((\\"Patient\\".\\"deletedAt\\" > '2017-11-16 08:00:00.000 +00:00' OR \\"Patient\\".\\"deletedAt\\" IS NULL) AND (\\"Patient\\".\\"accountId\\" = '62954241-3652-4792-bae5-5bfed53d37b7' AND \\"Patient\\".\\"status\\" = 'Active')) GROUP BY \\"Patient\\".\\"id\\" HAVING (count(CASE WHEN \\"sentRecalls\\".\\"isSent\\" = true then 1 else NULL END) = 0);",
      ],
      Array [
        "Executing (default): SELECT \\"Patient\\".\\"id\\", \\"Patient\\".\\"accountId\\", \\"Patient\\".\\"pmsId\\", \\"Patient\\".\\"patientUserId\\", \\"Patient\\".\\"email\\", \\"Patient\\".\\"firstName\\", \\"Patient\\".\\"lastName\\", \\"Patient\\".\\"middleName\\", \\"Patient\\".\\"cellPhoneNumber\\", \\"Patient\\".\\"phoneNumber\\", \\"Patient\\".\\"homePhoneNumber\\", \\"Patient\\".\\"mobilePhoneNumber\\", \\"Patient\\".\\"workPhoneNumber\\", \\"Patient\\".\\"otherPhoneNumber\\", \\"Patient\\".\\"prefContactPhone\\", \\"Patient\\".\\"gender\\", \\"Patient\\".\\"prefName\\", \\"Patient\\".\\"language\\", \\"Patient\\".\\"address\\", \\"Patient\\".\\"preferences\\", \\"Patient\\".\\"type\\", \\"Patient\\".\\"contactMethodNote\\", \\"Patient\\".\\"birthDate\\", \\"Patient\\".\\"pmsCreatedAt\\", \\"Patient\\".\\"insurance\\", \\"Patient\\".\\"isDeleted\\", \\"Patient\\".\\"isSyncedWithPms\\", \\"Patient\\".\\"familyId\\", \\"Patient\\".\\"status\\", \\"Patient\\".\\"lastApptId\\", \\"Patient\\".\\"lastApptDate\\", \\"Patient\\".\\"lastHygieneDate\\", \\"Patient\\".\\"lastHygieneApptId\\", \\"Patient\\".\\"lastRecallDate\\", \\"Patient\\".\\"lastRecallApptId\\", \\"Patient\\".\\"dueForRecallExamDate\\", \\"Patient\\".\\"recallPendingAppointmentId\\", \\"Patient\\".\\"dueForHygieneDate\\", \\"Patient\\".\\"hygienePendingAppointmentId\\", \\"Patient\\".\\"lastRestorativeDate\\", \\"Patient\\".\\"lastRestorativeApptId\\", \\"Patient\\".\\"firstApptId\\", \\"Patient\\".\\"firstApptDate\\", \\"Patient\\".\\"nextApptId\\", \\"Patient\\".\\"nextApptDate\\", \\"Patient\\".\\"insuranceInterval\\", \\"Patient\\".\\"contCareInterval\\", \\"Patient\\".\\"avatarUrl\\", \\"Patient\\".\\"omitReminderIds\\", \\"Patient\\".\\"omitRecallIds\\", \\"Patient\\".\\"createdAt\\", \\"Patient\\".\\"updatedAt\\", \\"Patient\\".\\"deletedAt\\" FROM \\"Patients\\" AS \\"Patient\\" LEFT OUTER JOIN \\"SentRecalls\\" AS \\"sentRecalls\\" ON \\"Patient\\".\\"id\\" = \\"sentRecalls\\".\\"patientId\\" AND ((\\"sentRecalls\\".\\"deletedAt\\" > '2017-11-16 08:00:00.000 +00:00' OR \\"sentRecalls\\".\\"deletedAt\\" IS NULL) AND (\\"sentRecalls\\".\\"createdAt\\" BETWEEN '2018-11-10' AND '2018-12-10' AND \\"sentRecalls\\".\\"isAutomated\\" = false)) WHERE ((\\"Patient\\".\\"deletedAt\\" > '2017-11-16 08:00:00.000 +00:00' OR \\"Patient\\".\\"deletedAt\\" IS NULL) AND (\\"Patient\\".\\"accountId\\" = '62954241-3652-4792-bae5-5bfed53d37b7' AND \\"Patient\\".\\"status\\" = 'Active')) GROUP BY \\"Patient\\".\\"id\\" HAVING (count(CASE WHEN \\"sentRecalls\\".\\"isSent\\" = true then 1 else NULL END) = 0) ORDER BY \\"Patient\\".\\"firstName\\", \\"Patient\\".\\"lastName\\" LIMIT 15 OFFSET 0;",
      ],
    ],
  },
  "offset": 0,
  "order": Array [
    "firstName",
    "lastName",
  ],
  "where": Object {
    "accountId": "62954241-3652-4792-bae5-5bfed53d37b7",
    "status": "Active",
  },
}
`;

exports[`#patientQueryBuilder Usage it works with sentRecalls sent automated 1`] = `
Object {
  "group": Array [
    "Patient.id",
  ],
  "include": Array [
    Object {
      "as": "sentRecalls",
      "attributes": Array [],
      "duplicating": false,
      "model": [Function],
      "required": true,
      "where": Object {
        "createdAt": Object {
          "$between": Array [
            "2018-11-10",
            "2018-12-10",
          ],
        },
        "isAutomated": true,
        "isSent": true,
      },
    },
  ],
  "limit": 15,
  "logging": [MockFunction] {
    "calls": Array [
      Array [
        Object {
          "attributes": Array [
            "id",
            "accountId",
            "pmsId",
            "patientUserId",
            "email",
            "firstName",
            "lastName",
            "middleName",
            "cellPhoneNumber",
            "phoneNumber",
            "homePhoneNumber",
            "mobilePhoneNumber",
            "workPhoneNumber",
            "otherPhoneNumber",
            "prefContactPhone",
            "gender",
            "prefName",
            "language",
            "address",
            "preferences",
            "type",
            "contactMethodNote",
            "birthDate",
            "pmsCreatedAt",
            "insurance",
            "isDeleted",
            "isSyncedWithPms",
            "familyId",
            "status",
            "lastApptId",
            "lastApptDate",
            "lastHygieneDate",
            "lastHygieneApptId",
            "lastRecallDate",
            "lastRecallApptId",
            "dueForRecallExamDate",
            "recallPendingAppointmentId",
            "dueForHygieneDate",
            "hygienePendingAppointmentId",
            "lastRestorativeDate",
            "lastRestorativeApptId",
            "firstApptId",
            "firstApptDate",
            "nextApptId",
            "nextApptDate",
            "insuranceInterval",
            "contCareInterval",
            "avatarUrl",
            "omitReminderIds",
            "omitRecallIds",
            "createdAt",
            "updatedAt",
            "deletedAt",
          ],
          "group": Array [
            "Patient.id",
          ],
          "include": Array [
            Object {
              "as": "sentRecalls",
              "attributes": Array [],
              "duplicating": false,
              "model": [Function],
              "required": true,
              "where": Object {
                "createdAt": Object {
                  "$between": Array [
                    "2018-11-10",
                    "2018-12-10",
                  ],
                },
                "isAutomated": true,
                "isSent": true,
              },
            },
          ],
          "limit": 15,
          "logging": [MockFunction] {
            "calls": [Circular],
          },
          "offset": 0,
          "order": Array [
            "firstName",
            "lastName",
          ],
          "where": Object {
            "accountId": "62954241-3652-4792-bae5-5bfed53d37b7",
            "status": "Active",
          },
        },
      ],
      Array [
        "Executing (default): SELECT count(\\"Patient\\".\\"id\\") AS \\"count\\" FROM \\"Patients\\" AS \\"Patient\\" INNER JOIN \\"SentRecalls\\" AS \\"sentRecalls\\" ON \\"Patient\\".\\"id\\" = \\"sentRecalls\\".\\"patientId\\" AND ((\\"sentRecalls\\".\\"deletedAt\\" > '2017-11-16 08:00:00.000 +00:00' OR \\"sentRecalls\\".\\"deletedAt\\" IS NULL) AND (\\"sentRecalls\\".\\"createdAt\\" BETWEEN '2018-11-10' AND '2018-12-10' AND \\"sentRecalls\\".\\"isSent\\" = true AND \\"sentRecalls\\".\\"isAutomated\\" = true)) WHERE ((\\"Patient\\".\\"deletedAt\\" > '2017-11-16 08:00:00.000 +00:00' OR \\"Patient\\".\\"deletedAt\\" IS NULL) AND (\\"Patient\\".\\"accountId\\" = '62954241-3652-4792-bae5-5bfed53d37b7' AND \\"Patient\\".\\"status\\" = 'Active')) GROUP BY \\"Patient\\".\\"id\\";",
      ],
      Array [
        "Executing (default): SELECT \\"Patient\\".\\"id\\", \\"Patient\\".\\"accountId\\", \\"Patient\\".\\"pmsId\\", \\"Patient\\".\\"patientUserId\\", \\"Patient\\".\\"email\\", \\"Patient\\".\\"firstName\\", \\"Patient\\".\\"lastName\\", \\"Patient\\".\\"middleName\\", \\"Patient\\".\\"cellPhoneNumber\\", \\"Patient\\".\\"phoneNumber\\", \\"Patient\\".\\"homePhoneNumber\\", \\"Patient\\".\\"mobilePhoneNumber\\", \\"Patient\\".\\"workPhoneNumber\\", \\"Patient\\".\\"otherPhoneNumber\\", \\"Patient\\".\\"prefContactPhone\\", \\"Patient\\".\\"gender\\", \\"Patient\\".\\"prefName\\", \\"Patient\\".\\"language\\", \\"Patient\\".\\"address\\", \\"Patient\\".\\"preferences\\", \\"Patient\\".\\"type\\", \\"Patient\\".\\"contactMethodNote\\", \\"Patient\\".\\"birthDate\\", \\"Patient\\".\\"pmsCreatedAt\\", \\"Patient\\".\\"insurance\\", \\"Patient\\".\\"isDeleted\\", \\"Patient\\".\\"isSyncedWithPms\\", \\"Patient\\".\\"familyId\\", \\"Patient\\".\\"status\\", \\"Patient\\".\\"lastApptId\\", \\"Patient\\".\\"lastApptDate\\", \\"Patient\\".\\"lastHygieneDate\\", \\"Patient\\".\\"lastHygieneApptId\\", \\"Patient\\".\\"lastRecallDate\\", \\"Patient\\".\\"lastRecallApptId\\", \\"Patient\\".\\"dueForRecallExamDate\\", \\"Patient\\".\\"recallPendingAppointmentId\\", \\"Patient\\".\\"dueForHygieneDate\\", \\"Patient\\".\\"hygienePendingAppointmentId\\", \\"Patient\\".\\"lastRestorativeDate\\", \\"Patient\\".\\"lastRestorativeApptId\\", \\"Patient\\".\\"firstApptId\\", \\"Patient\\".\\"firstApptDate\\", \\"Patient\\".\\"nextApptId\\", \\"Patient\\".\\"nextApptDate\\", \\"Patient\\".\\"insuranceInterval\\", \\"Patient\\".\\"contCareInterval\\", \\"Patient\\".\\"avatarUrl\\", \\"Patient\\".\\"omitReminderIds\\", \\"Patient\\".\\"omitRecallIds\\", \\"Patient\\".\\"createdAt\\", \\"Patient\\".\\"updatedAt\\", \\"Patient\\".\\"deletedAt\\" FROM \\"Patients\\" AS \\"Patient\\" INNER JOIN \\"SentRecalls\\" AS \\"sentRecalls\\" ON \\"Patient\\".\\"id\\" = \\"sentRecalls\\".\\"patientId\\" AND ((\\"sentRecalls\\".\\"deletedAt\\" > '2017-11-16 08:00:00.000 +00:00' OR \\"sentRecalls\\".\\"deletedAt\\" IS NULL) AND (\\"sentRecalls\\".\\"createdAt\\" BETWEEN '2018-11-10' AND '2018-12-10' AND \\"sentRecalls\\".\\"isSent\\" = true AND \\"sentRecalls\\".\\"isAutomated\\" = true)) WHERE ((\\"Patient\\".\\"deletedAt\\" > '2017-11-16 08:00:00.000 +00:00' OR \\"Patient\\".\\"deletedAt\\" IS NULL) AND (\\"Patient\\".\\"accountId\\" = '62954241-3652-4792-bae5-5bfed53d37b7' AND \\"Patient\\".\\"status\\" = 'Active')) GROUP BY \\"Patient\\".\\"id\\" ORDER BY \\"Patient\\".\\"firstName\\", \\"Patient\\".\\"lastName\\" LIMIT 15 OFFSET 0;",
      ],
    ],
  },
  "offset": 0,
  "order": Array [
    "firstName",
    "lastName",
  ],
  "where": Object {
    "accountId": "62954241-3652-4792-bae5-5bfed53d37b7",
    "status": "Active",
  },
}
`;

exports[`#patientQueryBuilder Usage it works with sentRecalls sent manual 1`] = `
Object {
  "group": Array [
    "Patient.id",
  ],
  "include": Array [
    Object {
      "as": "sentRecalls",
      "attributes": Array [],
      "duplicating": false,
      "model": [Function],
      "required": true,
      "where": Object {
        "createdAt": Object {
          "$between": Array [
            "2018-11-10",
            "2018-12-10",
          ],
        },
        "isAutomated": false,
        "isSent": true,
      },
    },
  ],
  "limit": 15,
  "logging": [MockFunction] {
    "calls": Array [
      Array [
        Object {
          "attributes": Array [
            "id",
            "accountId",
            "pmsId",
            "patientUserId",
            "email",
            "firstName",
            "lastName",
            "middleName",
            "cellPhoneNumber",
            "phoneNumber",
            "homePhoneNumber",
            "mobilePhoneNumber",
            "workPhoneNumber",
            "otherPhoneNumber",
            "prefContactPhone",
            "gender",
            "prefName",
            "language",
            "address",
            "preferences",
            "type",
            "contactMethodNote",
            "birthDate",
            "pmsCreatedAt",
            "insurance",
            "isDeleted",
            "isSyncedWithPms",
            "familyId",
            "status",
            "lastApptId",
            "lastApptDate",
            "lastHygieneDate",
            "lastHygieneApptId",
            "lastRecallDate",
            "lastRecallApptId",
            "dueForRecallExamDate",
            "recallPendingAppointmentId",
            "dueForHygieneDate",
            "hygienePendingAppointmentId",
            "lastRestorativeDate",
            "lastRestorativeApptId",
            "firstApptId",
            "firstApptDate",
            "nextApptId",
            "nextApptDate",
            "insuranceInterval",
            "contCareInterval",
            "avatarUrl",
            "omitReminderIds",
            "omitRecallIds",
            "createdAt",
            "updatedAt",
            "deletedAt",
          ],
          "group": Array [
            "Patient.id",
          ],
          "include": Array [
            Object {
              "as": "sentRecalls",
              "attributes": Array [],
              "duplicating": false,
              "model": [Function],
              "required": true,
              "where": Object {
                "createdAt": Object {
                  "$between": Array [
                    "2018-11-10",
                    "2018-12-10",
                  ],
                },
                "isAutomated": false,
                "isSent": true,
              },
            },
          ],
          "limit": 15,
          "logging": [MockFunction] {
            "calls": [Circular],
          },
          "offset": 0,
          "order": Array [
            "firstName",
            "lastName",
          ],
          "where": Object {
            "accountId": "62954241-3652-4792-bae5-5bfed53d37b7",
            "status": "Active",
          },
        },
      ],
      Array [
        "Executing (default): SELECT count(\\"Patient\\".\\"id\\") AS \\"count\\" FROM \\"Patients\\" AS \\"Patient\\" INNER JOIN \\"SentRecalls\\" AS \\"sentRecalls\\" ON \\"Patient\\".\\"id\\" = \\"sentRecalls\\".\\"patientId\\" AND ((\\"sentRecalls\\".\\"deletedAt\\" > '2017-11-16 08:00:00.000 +00:00' OR \\"sentRecalls\\".\\"deletedAt\\" IS NULL) AND (\\"sentRecalls\\".\\"createdAt\\" BETWEEN '2018-11-10' AND '2018-12-10' AND \\"sentRecalls\\".\\"isSent\\" = true AND \\"sentRecalls\\".\\"isAutomated\\" = false)) WHERE ((\\"Patient\\".\\"deletedAt\\" > '2017-11-16 08:00:00.000 +00:00' OR \\"Patient\\".\\"deletedAt\\" IS NULL) AND (\\"Patient\\".\\"accountId\\" = '62954241-3652-4792-bae5-5bfed53d37b7' AND \\"Patient\\".\\"status\\" = 'Active')) GROUP BY \\"Patient\\".\\"id\\";",
      ],
      Array [
        "Executing (default): SELECT \\"Patient\\".\\"id\\", \\"Patient\\".\\"accountId\\", \\"Patient\\".\\"pmsId\\", \\"Patient\\".\\"patientUserId\\", \\"Patient\\".\\"email\\", \\"Patient\\".\\"firstName\\", \\"Patient\\".\\"lastName\\", \\"Patient\\".\\"middleName\\", \\"Patient\\".\\"cellPhoneNumber\\", \\"Patient\\".\\"phoneNumber\\", \\"Patient\\".\\"homePhoneNumber\\", \\"Patient\\".\\"mobilePhoneNumber\\", \\"Patient\\".\\"workPhoneNumber\\", \\"Patient\\".\\"otherPhoneNumber\\", \\"Patient\\".\\"prefContactPhone\\", \\"Patient\\".\\"gender\\", \\"Patient\\".\\"prefName\\", \\"Patient\\".\\"language\\", \\"Patient\\".\\"address\\", \\"Patient\\".\\"preferences\\", \\"Patient\\".\\"type\\", \\"Patient\\".\\"contactMethodNote\\", \\"Patient\\".\\"birthDate\\", \\"Patient\\".\\"pmsCreatedAt\\", \\"Patient\\".\\"insurance\\", \\"Patient\\".\\"isDeleted\\", \\"Patient\\".\\"isSyncedWithPms\\", \\"Patient\\".\\"familyId\\", \\"Patient\\".\\"status\\", \\"Patient\\".\\"lastApptId\\", \\"Patient\\".\\"lastApptDate\\", \\"Patient\\".\\"lastHygieneDate\\", \\"Patient\\".\\"lastHygieneApptId\\", \\"Patient\\".\\"lastRecallDate\\", \\"Patient\\".\\"lastRecallApptId\\", \\"Patient\\".\\"dueForRecallExamDate\\", \\"Patient\\".\\"recallPendingAppointmentId\\", \\"Patient\\".\\"dueForHygieneDate\\", \\"Patient\\".\\"hygienePendingAppointmentId\\", \\"Patient\\".\\"lastRestorativeDate\\", \\"Patient\\".\\"lastRestorativeApptId\\", \\"Patient\\".\\"firstApptId\\", \\"Patient\\".\\"firstApptDate\\", \\"Patient\\".\\"nextApptId\\", \\"Patient\\".\\"nextApptDate\\", \\"Patient\\".\\"insuranceInterval\\", \\"Patient\\".\\"contCareInterval\\", \\"Patient\\".\\"avatarUrl\\", \\"Patient\\".\\"omitReminderIds\\", \\"Patient\\".\\"omitRecallIds\\", \\"Patient\\".\\"createdAt\\", \\"Patient\\".\\"updatedAt\\", \\"Patient\\".\\"deletedAt\\" FROM \\"Patients\\" AS \\"Patient\\" INNER JOIN \\"SentRecalls\\" AS \\"sentRecalls\\" ON \\"Patient\\".\\"id\\" = \\"sentRecalls\\".\\"patientId\\" AND ((\\"sentRecalls\\".\\"deletedAt\\" > '2017-11-16 08:00:00.000 +00:00' OR \\"sentRecalls\\".\\"deletedAt\\" IS NULL) AND (\\"sentRecalls\\".\\"createdAt\\" BETWEEN '2018-11-10' AND '2018-12-10' AND \\"sentRecalls\\".\\"isSent\\" = true AND \\"sentRecalls\\".\\"isAutomated\\" = false)) WHERE ((\\"Patient\\".\\"deletedAt\\" > '2017-11-16 08:00:00.000 +00:00' OR \\"Patient\\".\\"deletedAt\\" IS NULL) AND (\\"Patient\\".\\"accountId\\" = '62954241-3652-4792-bae5-5bfed53d37b7' AND \\"Patient\\".\\"status\\" = 'Active')) GROUP BY \\"Patient\\".\\"id\\" ORDER BY \\"Patient\\".\\"firstName\\", \\"Patient\\".\\"lastName\\" LIMIT 15 OFFSET 0;",
      ],
    ],
  },
  "offset": 0,
  "order": Array [
    "firstName",
    "lastName",
  ],
  "where": Object {
    "accountId": "62954241-3652-4792-bae5-5bfed53d37b7",
    "status": "Active",
  },
}
`;
