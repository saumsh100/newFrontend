version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - $(aws ecr get-login --region ca-central-1 --no-include-email)
      - REPOSITORY_URI=453923235837.dkr.ecr.ca-central-1.amazonaws.com/carecru-dev-blue
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest . --build-arg API_SERVER_URL=$API_SERVER_URL --build-arg FEATURE_FLAG_KEY=$FEATURE_FLAG_KEY --build-arg GOOGLE_API_KEY=$GOOGLE_API_KEY --build-arg API_URL=$API_URL --build-arg INTERCOM_APP_ID=$INTERCOM_APP_ID --build-arg LOGROCKET_APP_ID=$LOGROCKET_APP_ID --build-arg NODE_ENV=$NODE_ENV --build-arg HOST=$HOST --build-arg NPM_TOKEN=$NPM_TOKEN --build-arg MODE_ANALYTICS_ACCESS_KEY=$MODE_ANALYTICS_ACCESS_KEY
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"carecru-test","imageUri":"%1s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - printf '[{"name":"dev-node-cron","imageUri":"%1s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitionscron.json
      - printf '[{"name":"dev-node-events","imageUri":"%1s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitionsevents.json
      - printf '[{"name":"dev-node-patientCache","imageUri":"%1s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitionspatientCache.json

artifacts:
    files:
      - imagedefinitions.json
      - imagedefinitionscron.json
      - imagedefinitionsevents.json
      - imagedefinitionspatientCache.json
