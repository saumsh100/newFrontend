version: 0.2

phases:
  install:
    commands:
      - echo Installing source NPM dependencies...
      - npm install
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --region ${region} --no-include-email)
      - echo Entered the pre_build phase...
  build:
    commands:
      - echo Build started on `date`
      - echo Compiling the code
      - REPOSITORY_URI=${repository_url}
      - IMAGE_TAG=$(echo $(date +%Y%m%d)-$(date +%H%M))
      - docker build -t $REPOSITORY_URI:latest . --build-arg FEATURE_FLAG_KEY=$FEATURE_FLAG_KEY --build-arg GOOGLE_API_KEY=$GOOGLE_API_KEY --build-arg API_URL=$API_URL --build-arg INTERCOM_APP_ID=$INTERCOM_APP_ID --build-arg LOGROCKET_APP_ID=$LOGROCKET_APP_ID --build-arg NODE_ENV=$NODE_ENV --build-arg HOST=$HOST --build-arg NPM_TOKEN=$NPM_TOKEN --build-arg MODE_ANALYTICS_ACCESS_KEY=$MODE_ANALYTICS_ACCESS_KEY
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"${app_name}","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
artifacts:
  files: imagedefinitions.json