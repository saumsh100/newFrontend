{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{2851:function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var r=function(e,t,a){return t&&n(e.prototype,t),a&&n(e,a),e};function n(e,t){for(var a=0;a<t.length;a++){var r=t[a];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=g(a(0)),s=a(1),l=g(s),u=a(16),c=a(15),o=g(a(2505)),d=g(a(2506)),h=a(72),f=a(8),y=g(a(101)),p=g(a(266)),m=a(374),S=g(a(368)),b=g(a(950)),v=g(a(536)),_=g(a(2852));function g(e){return e&&e.__esModule?e:{default:e}}var D=[\"monday\",\"tuesday\",\"wednesday\",\"thursday\",\"friday\",\"saturday\",\"sunday\"],k=(function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(O,s.Component),r(O,[{key:\"reinitializeState\",value:function(){this.setState({active:!1})}},{key:\"delete\",value:function(e){if(!confirm(\"Delete Schedule?\"))return null;var t=Object.assign({},this.props.weeklySchedule.toJS());t.weeklySchedules.splice(e,1),t.weeklySchedules[0]||(t.isAdvanced=!1);var a=this.props.weeklySchedule.merge(t);return this.props.updateEntityRequest({key:\"weeklySchedule\",model:a,alert:{success:{body:\"Clinic Pattern Deleted\"},error:{body:\"Clinic Pattern Deleted Failed\"}}})}},{key:\"sendEdit\",value:function(a,r){var n=Object.assign({},this.props.weeklySchedule.toJS());n.weeklySchedules=n.weeklySchedules||[],Object.keys(r).forEach(function(e){if(r[e].breaks)n.weeklySchedules[a][e].breaks=r[e].breaks;else{var t=n.weeklySchedules[a][e].breaks;n.weeklySchedules[a][e]=r[e],n.weeklySchedules[a][e].breaks=t}});var e=this.props.weeklySchedule.merge(n);this.props.updateEntityRequest({key:\"weeklySchedule\",model:e,alert:{success:{body:\"Clinic Office Hours Updated\"},error:{body:\"Clinic Office Hours Update Failed\"}}})}},{key:\"changeStartDate\",value:function(e){var t=this,a=Object.assign({},this.props.weeklySchedule.toJS());a.startDate=e.startDate;var r=this.props.weeklySchedule.merge(a);return this.props.updateEntityRequest({key:\"weeklySchedule\",model:r,alert:{success:{body:\"Clinic Office Hours Updated\"},error:{body:\"Clinic Office Hours Update Failed\"}}}).then(function(){t.setState({active:!1})})}},{key:\"createPattern\",value:function(){var e=this,t=confirm(\"Are you sure you want to create a pattern?\");if(!t)return null;var a=Object.assign({},this.props.weeklySchedule.toJS()),r=Object.assign({},this.props.weeklySchedule.toJS());if(a.weeklySchedules=a.weeklySchedules||[],!r.startDate)return window.alert(\"Please put in a start date before creating a pattern!\"),null;delete r.weeklySchedules,delete r.startDate,delete r.id,a.weeklySchedules.push(r),a.isAdvanced=!0;var n=this.props.weeklySchedule.merge(a);return this.props.updateEntityRequest({key:\"weeklySchedule\",model:n,alert:{success:{body:\"Clinic Office Hours Updated\"},error:{body:\"Clinic Office Hours Update Failed\"}}}).then(function(){e.setState({active:!1})})}},{key:\"openModal\",value:function(){this.setState({active:!0})}},{key:\"render\",value:function(){function e(e,a){var r=Object.assign({},i.toJS());D.forEach(function(t){Object.keys(a[t]).forEach(function(e){r[t][e]=a[t][e]})}),n.props.updateEntityRequest({key:\"weeklySchedule\",model:i.merge(r),alert:{success:{body:\"Clinic Office Hours Updated\"},error:{body:\"Clinic Office Hours Update Failed\"}}})}var n=this,t=this.props,i=t.weeklySchedule,a=(t.activeAccount,null);i&&i.toJS().weeklySchedules&&(a=i.toJS().weeklySchedules.map(function(e,t){return l.default.createElement(\"div\",null,l.default.createElement(\"div\",{className:v.default.orSpacer}),l.default.createElement(\"div\",{className:v.default.flexHeader,\"data-test-id\":\"pattern_\"+t},l.default.createElement(f.Header,{contentHeader:!0,title:\"Week \"+(t+2)+\" Pattern\",className:v.default.header}),l.default.createElement(f.Button,{className:v.default.button,onClick:n.delete},\"Delete\")),l.default.createElement(o.default,{weeklySchedule:e,onSubmit:n.sendEdit,formName:\"officeHours\"+t,hoursIndex:t}),l.default.createElement(f.Header,{title:\"Breaks\",className:v.default.subHeader}),l.default.createElement(d.default,{weeklySchedule:e,onSubmit:n.sendEdit,formName:\"officeHours\"+t,breaksName:\"clinicBreaks\"+t,breaksIndex:t}))}));var r=[{label:\"Cancel\",onClick:this.reinitializeState,component:f.Button,props:{border:\"blue\"}},{label:\"Save\",onClick:this.changeStartDate,component:p.default,props:{color:\"blue\",form:\"advanceCreate\"}}];return l.default.createElement(b.default,{title:\"Office Hours\",bodyClass:v.default.officeHoursBody},l.default.createElement(y.default,{predicate:function(e){return e.flags.get(\"office-hours-calendar-schedule\")},render:l.default.createElement(_.default,null),fallback:l.default.createElement(\"div\",null,l.default.createElement(f.DialogBox,{actions:r,title:\"Update StartDate\",type:\"small\",active:this.state.active,onEscKeyDown:this.reinitializeState,onOverlayClick:this.reinitializeState,\"data-test-id\":\"inviteUserDialog\"},l.default.createElement(f.Form,{form:\"advanceCreate\",onSubmit:this.changeStartDate,initialValues:i,ignoreSaveButton:!0,\"data-test-id\":\"advanceCreate\"},l.default.createElement(f.Field,{required:!0,component:\"DayPicker\",name:\"startDate\",label:\"Start Date\",\"data-test-id\":\"input_startDateDayPicker\"}))),l.default.createElement(\"div\",{className:v.default.flexHeader},l.default.createElement(f.Header,{title:\"Weekly Schedule\",contentHeader:!0,className:v.default.header}),l.default.createElement(\"div\",null,l.default.createElement(f.Button,{className:v.default.button,onClick:this.createPattern,\"data-test-id\":\"button_createPatternSchedule\",secondary:!0},\"Add New Pattern\"),l.default.createElement(f.Button,{className:v.default.button,onClick:this.openModal,\"data-test-id\":\"button_changeStartDate\",secondary:!0},\"Change Start Date\"))),l.default.createElement(o.default,{weeklySchedule:i,onSubmit:e,formName:\"officeHours\",hoursIndex:0}),l.default.createElement(f.Header,{title:\"Breaks\",contentHeader:!0,className:v.default.subHeader}),l.default.createElement(d.default,{weeklySchedule:i,onSubmit:e,formName:\"officeHours\",breaksName:\"clinicBreaks\",breaksIndex:0}),a)}))}}]),O);function O(e){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,O);var t=function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}(this,(O.__proto__||Object.getPrototypeOf(O)).call(this,e));return t.state={active:!1},t.reinitializeState=t.reinitializeState.bind(t),t.openModal=t.openModal.bind(t),t.createPattern=t.createPattern.bind(t),t.changeStartDate=t.changeStartDate.bind(t),t.sendEdit=t.sendEdit.bind(t),t.delete=t.delete.bind(t),t}function H(e){var t=e.entities,a=e.auth,r=t.getIn([\"accounts\",\"models\",a.get(\"accountId\")]);return r?{weeklySchedule:t.getIn([\"weeklySchedules\",\"models\",r.get(\"weeklyScheduleId\")]),activeAccount:r}:{}}function w(e){return(0,u.bindActionCreators)({updateEntityRequest:h.updateEntityRequest},e)}k.propTypes={activeAccount:i.default.shape(S.default),weeklySchedule:i.default.shape(m.weeklyScheduleShape),updateEntityRequest:i.default.func};var C=(0,c.connect)(H,w),E=C(k);t.default=E;\"undefined\"!=typeof __REACT_HOT_LOADER__&&(__REACT_HOT_LOADER__.register(D,\"daysOfWeek\",\"/Users/lucas/GitHub/carecru/frontend/client/components/Settings/Practice/OfficeHours/index.jsx\"),__REACT_HOT_LOADER__.register(k,\"OfficeHours\",\"/Users/lucas/GitHub/carecru/frontend/client/components/Settings/Practice/OfficeHours/index.jsx\"),__REACT_HOT_LOADER__.register(H,\"mapStateToProps\",\"/Users/lucas/GitHub/carecru/frontend/client/components/Settings/Practice/OfficeHours/index.jsx\"),__REACT_HOT_LOADER__.register(w,\"mapDispatchToProps\",\"/Users/lucas/GitHub/carecru/frontend/client/components/Settings/Practice/OfficeHours/index.jsx\"),__REACT_HOT_LOADER__.register(C,\"enhance\",\"/Users/lucas/GitHub/carecru/frontend/client/components/Settings/Practice/OfficeHours/index.jsx\"),__REACT_HOT_LOADER__.register(E,\"default\",\"/Users/lucas/GitHub/carecru/frontend/client/components/Settings/Practice/OfficeHours/index.jsx\"))},2852:function(e,C,E){\"use strict\";(function(n){Object.defineProperty(C,\"__esModule\",{value:!0});var i=function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var a=[],r=!0,n=!1,i=void 0;try{for(var s,l=e[Symbol.iterator]();!(r=(s=l.next()).done)&&(a.push(s.value),!t||a.length!==t);r=!0);}catch(e){n=!0,i=e}finally{try{!r&&l.return&&l.return()}finally{if(n)throw i}}return a}(e,t);throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")},u=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var r in a)Object.prototype.hasOwnProperty.call(a,r)&&(e[r]=a[r])}return e},e=function(e,t,a){return t&&r(e.prototype,t),a&&r(e,a),e};function r(e,t){for(var a=0;a<t.length;a++){var r=t[a];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=E(1),s=S(t),a=S(E(0)),l=E(15),c=E(16),o=S(E(2507)),d=S(E(373)),h=E(22),f=S(E(2508)),y=E(2853),p=E(113),m=S(E(2509));function S(e){return e&&e.__esModule?e:{default:e}}function b(e){return function(){var l=e.apply(this,arguments);return new Promise(function(i,s){return function t(e,a){try{var r=l[e](a),n=r.value}catch(e){return void s(e)}if(!r.done)return Promise.resolve(n).then(function(e){t(\"next\",e)},function(e){t(\"throw\",e)});i(n)}(\"next\")})}}function v(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}var _,g,D=(function(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(k,t.Component),e(k,[{key:\"componentDidMount\",value:function(){this.getSchedule()}},{key:\"onChangeMonth\",value:function(e){var t=this;this.setState({month:e,selectedDay:null,isLoading:!0,selectedDailySchedule:null},function(){return t.getSchedule(e)})}},{key:\"getModifier\",value:function(e){var i=this;return Object.keys((0,o.default)(this.state.baseSchedule.schedule,e)).map(function(e){var t=(0,h.setDateToTimezone)(e,i.props.timezone).toObject(),a=t.years,r=t.months,n=t.date;return new Date(a,r,n)})}},{key:\"getSchedule\",value:function(e){var a=this,t=0<arguments.length&&void 0!==e?e:this.state.month;return(0,y.getFinalDailyHours)({accountId:this.props.accountId,startDate:(0,h.getStartOfTheMonth)(t),endDate:(0,h.getEndOfTheMonth)(t)}).then(function(e){var t=e.data;return a.setState({baseSchedule:t},function(){return setTimeout(function(){return a.setState({isLoading:!1})},1e3)})})}},{key:\"getFeaturedDay\",value:function(e){var t=0<arguments.length&&void 0!==e?e:this.state.selectedDay;return v({},(0,h.dateFormatter)(t,this.props.timezone,\"dddd\").toLowerCase(),u({},this.state.baseSchedule.schedule[t.toISOString().split(\"T\")[0]],{isFeatured:!0}))}},{key:\"isOverride\",value:function(){return this.state.selectedDay&&this.state.selectedDailySchedule.isDailySchedule||!1}},{key:\"scheduleMap\",value:function(){var e=this.state.selectedDay&&this.state.selectedDailySchedule.isDailySchedule?this.getFeaturedDay():u({},this.state.baseSchedule.weeklySchedule,this.state.selectedDay?this.getFeaturedDay():null),t=(0,d.default)(e,[\"sunday\",\"monday\",\"tuesday\",\"wednesday\",\"thursday\",\"friday\",\"saturday\"]);return Object.entries(t).reduce(function(e,t){var a=i(t,2),r=a[0],n=a[1];return u({},e,v({},r,{breaks:n.breaks||[],chairIds:n.chairIds||[],endTime:n.endTime||null,isClosed:n.isClosed||!1,isFeatured:n.isFeatured||!1,isDailySchedule:n.isDailySchedule||!1,startTime:n.startTime||null}))},{})}},{key:\"handleDayClick\",value:function(e,t){var a=this.state.selectedDay&&this.state.selectedDay.getTime()===e.getTime()?null:e;this.setState({selectedDay:a,selectedDailySchedule:a?Object.values(this.getFeaturedDay(a))[0]:null},t)}},{key:\"handleDoubleClick\",value:function(e,t){var a=this;return function(){return a.handleDayClick(e,function(){return t((0,h.dateFormatter)(e,a.props.timezone,\"dddd\").toLowerCase())})}}},{key:\"handleCreateCustomSchedule\",value:(g=b(regeneratorRuntime.mark(function e(){var t=(0<arguments.length&&void 0!==arguments[0]?arguments[0]:{}).date;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,(0,y.createDailyHours)(t.toISOString().split(\"T\")[0]);case 3:return e.next=5,this.getSchedule();case 5:this.setState({selectedDailySchedule:this.state.selectedDay?Object.values(this.getFeaturedDay(this.state.selectedDay))[0]:null}),this.props.showAlertTimeout({alert:{body:\"Created holiday hours for the practice on \"+(0,h.dateFormatter)(t,this.props.timezone,\"dddd, MMMM Do\")},type:\"success\"}),e.next=12;break;case 9:e.prev=9,e.t0=e.catch(0),n.error(e.t0);case 12:case\"end\":return e.stop()}},e,this,[[0,9]])})),function(){return g.apply(this,arguments)})},{key:\"handleUpdateSchedule\",value:function(e,t){var a=this,r=e.id,n=e.date,i=e.isDailySchedule,s=function(e,t){var a={};for(var r in e)0<=t.indexOf(r)||Object.prototype.hasOwnProperty.call(e,r)&&(a[r]=e[r]);return a}(e,[\"id\",\"date\",\"isDailySchedule\"]),l=(0,d.default)(s,[\"startTime\",\"endTime\",\"breaks\",\"chairIds\"]);return(0,y.updateFinalDailyHours)(r,u({},l,{endTime:l.endTime,startTime:l.startTime,breaks:l.breaks})).then(function(){a.getSchedule(a.state.month);var e=n&&i?\"Updated holiday hours for the practice on \"+(0,h.dateFormatter)(n,a.props.timezone,\"dddd, MMMM Do\"):\"Updated default schedule for the practice\";a.props.showAlertTimeout({alert:{body:e},type:\"success\"})}).then(t)}},{key:\"handleRemoveOverrideHours\",value:(_=b(regeneratorRuntime.mark(function e(){var t=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},a=t.scheduleId,r=t.date;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,(0,y.deleteDailyHours)(a);case 3:return e.next=5,this.getSchedule();case 5:this.setState({selectedDailySchedule:this.state.selectedDay?Object.values(this.getFeaturedDay(this.state.selectedDay))[0]:null}),this.props.showAlertTimeout({alert:{body:\"Deleted holiday hours for the practice on \"+(0,h.dateFormatter)(r,this.props.timezone,\"dddd, MMMM Do\")},type:\"success\"}),e.next=12;break;case 9:e.prev=9,e.t0=e.catch(0),n.error(e.t0);case 12:case\"end\":return e.stop()}},e,this,[[0,9]])})),function(){return _.apply(this,arguments)})},{key:\"render\",value:function(){var a=this,r=this.props.timezone;return s.default.createElement(\"div\",null,s.default.createElement(f.default,{baseSchedule:this.state.baseSchedule,closedDays:this.getModifier(\"isClosed\"),dailyScheduleDays:this.getModifier(\"isDailySchedule\"),handleCreateCustomSchedule:this.handleCreateCustomSchedule,handleDayClick:this.handleDayClick,handleRemoveOverrideHours:this.handleRemoveOverrideHours,handleUpdateSchedule:this.handleUpdateSchedule,isLoading:this.state.isLoading,isOverride:this.isOverride(),month:this.state.month,onChangeMonth:this.onChangeMonth,practitioner:null,renderDay:function(e,t){return(0,m.default)(e,a.handleDoubleClick(e,t),Object.values(a.getFeaturedDay(e))[0],r)},selectedDay:this.state.selectedDay,timezone:r,weeklySchedule:this.scheduleMap()}))}}]),k);function k(e){!function(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,k);var t=function(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}(this,(k.__proto__||Object.getPrototypeOf(k)).call(this,e));return t.state={selectedDay:null,baseSchedule:{schedule:{},isCustomSchedule:!1,dailySchedule:[],weeklySchedule:{}},selectedDailySchedule:null,isLoading:!0,month:new Date},t.getSchedule=t.getSchedule.bind(t),t.handleDayClick=t.handleDayClick.bind(t),t.handleDoubleClick=t.handleDoubleClick.bind(t),t.handleUpdateSchedule=t.handleUpdateSchedule.bind(t),t.handleCreateCustomSchedule=t.handleCreateCustomSchedule.bind(t),t.handleRemoveOverrideHours=t.handleRemoveOverrideHours.bind(t),t.onChangeMonth=t.onChangeMonth.bind(t),t.scheduleMap=t.scheduleMap.bind(t),t.getFeaturedDay=t.getFeaturedDay.bind(t),t}function O(e){var t=e.auth,a=e.entities.getIn([\"accounts\",\"models\",t.get(\"accountId\")]);return{timezone:a.get(\"timezone\"),accountId:t.get(\"accountId\"),weeklyScheduleId:a.get(\"weeklyScheduleId\")}}function H(e){return(0,c.bindActionCreators)({showAlertTimeout:p.showAlertTimeout},e)}var w=(0,l.connect)(O,H)(D);C.default=w,D.propTypes={accountId:a.default.string.isRequired,showAlertTimeout:a.default.func.isRequired,timezone:a.default.string.isRequired};\"undefined\"!=typeof __REACT_HOT_LOADER__&&(__REACT_HOT_LOADER__.register(D,\"OfficeHoursCalendar\",\"/Users/lucas/GitHub/carecru/frontend/client/components/Settings/Practice/OfficeHours/OfficeHoursCalendar.jsx\"),__REACT_HOT_LOADER__.register(O,\"mapStateToProps\",\"/Users/lucas/GitHub/carecru/frontend/client/components/Settings/Practice/OfficeHours/OfficeHoursCalendar.jsx\"),__REACT_HOT_LOADER__.register(H,\"mapActionsToProps\",\"/Users/lucas/GitHub/carecru/frontend/client/components/Settings/Practice/OfficeHours/OfficeHoursCalendar.jsx\"),__REACT_HOT_LOADER__.register(w,\"default\",\"/Users/lucas/GitHub/carecru/frontend/client/components/Settings/Practice/OfficeHours/OfficeHoursCalendar.jsx\"))}).call(this,E(18))},2853:function(e,t,a){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.deleteDailyHours=t.updateFinalDailyHours=t.getFinalDailyHours=t.createDailyHours=void 0;var n=a(54),r=t.createDailyHours=function(e){return(0,n.httpClient)().post(\"/api/dailySchedules\",{date:e,practitionerId:null,startTime:new Date(1970,1,0,8,0).toISOString(),endTime:new Date(1970,1,0,14,0).toISOString()})},i=t.getFinalDailyHours=function(e){var t=e.accountId,a=e.startDate,r=e.endDate;return(0,n.httpClient)().get(\"/api/accounts/\"+t+\"/finalDailySchedules\",{params:{startDate:a,endDate:r}})},s=t.updateFinalDailyHours=function(e,t){return(0,n.httpClient)().put(\"/api/dailySchedules/\"+e,t)},l=t.deleteDailyHours=function(e){return(0,n.httpClient)().delete(\"/api/dailySchedules/\"+e)};\"undefined\"!=typeof __REACT_HOT_LOADER__&&(__REACT_HOT_LOADER__.register(r,\"createDailyHours\",\"/Users/lucas/GitHub/carecru/frontend/client/components/Settings/Practice/OfficeHours/thunks.js\"),__REACT_HOT_LOADER__.register(i,\"getFinalDailyHours\",\"/Users/lucas/GitHub/carecru/frontend/client/components/Settings/Practice/OfficeHours/thunks.js\"),__REACT_HOT_LOADER__.register(s,\"updateFinalDailyHours\",\"/Users/lucas/GitHub/carecru/frontend/client/components/Settings/Practice/OfficeHours/thunks.js\"),__REACT_HOT_LOADER__.register(l,\"deleteDailyHours\",\"/Users/lucas/GitHub/carecru/frontend/client/components/Settings/Practice/OfficeHours/thunks.js\"))}}]);","extractedComments":[]}